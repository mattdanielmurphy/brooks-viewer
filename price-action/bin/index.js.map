{"version":3,"sources":["../src/index.js"],"names":["fs","fsSync","promises","require","config","setUpPuppeteer","browser","puppeteer","launch","headless","page","newPage","on","msg","i","args","length","console","log","signIn","waitForSelector","type","process","env","USERNAME","PASSWORD","Promise","all","waitForNavigation","waitUntil","click","getPostsForMonth","year","month","authorIs","name","titleDoesNotContain","slice","call","arguments","nameElements","evaluate","el","scrape","goto","close"],"mappings":"AAAA;;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AACA,MAAMA,EAAE,GAAGC,YAAOC,QAAlB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,eAAeC,cAAf,GAAgC;AAC/B,QAAMC,OAAO,GAAG,MAAMC,mBAAUC,MAAV,CAAiB;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAjB,CAAtB;AACA,QAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACK,OAAR,EAAnB,CAF+B,CAG/B;;AACAD,EAAAA,IAAI,CAACE,EAAL,CAAQ,SAAR,EAAoBC,GAAD,IAAS;AAC3B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,IAAJ,GAAWC,MAA/B,EAAuC,EAAEF,CAAzC,EACCG,OAAO,CAACC,GAAR,CAAa,GAAEJ,CAAE,KAAID,GAAG,CAACE,IAAJ,GAAWD,CAAX,CAAc,EAAnC;AACD,GAHD;AAIA,SAAO,CAACR,OAAD,EAAUI,IAAV,CAAP;AACA;;AAED,eAAeS,MAAf,CAAsBT,IAAtB,EAA4B;AAC3B,QAAMA,IAAI,CAACU,eAAL,CAAqB,wBAArB,CAAN;AACA,QAAMV,IAAI,CAACW,IAAL,CAAU,wBAAV,EAAoCC,OAAO,CAACC,GAAR,CAAYC,QAAhD,CAAN;AACA,QAAMd,IAAI,CAACW,IAAL,CAAU,wBAAV,EAAoCC,OAAO,CAACC,GAAR,CAAYE,QAAhD,CAAN;AACA,QAAMC,OAAO,CAACC,GAAR,CAAY,CACjB;AACAjB,EAAAA,IAAI,CAACkB,iBAAL,CAAuB;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAvB,CAFiB,EAGjBnB,IAAI,CAACoB,KAAL,CAAW,qBAAX,CAHiB,CAAZ,CAAN;AAKA,QAAMpB,IAAI,CAACU,eAAL,CAAqB,YAArB,CAAN;AACA;;AAED,eAAeW,gBAAf,CAAgCrB,IAAhC,EAAsCsB,IAAtC,EAA4CC,KAA5C,EAAmD;AAClD;AACA;AACA;AACA;AACA,WAASC,QAAT,CAAkBC,IAAlB,EAAwB,CAAE;;AAC1B,WAASC,mBAAT,GAA+B;AAC9B,UAAMrB,IAAI,GAAG,GAAGsB,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAb,CAD8B,CAE9B;AACA,GATiD,CAUlD;AACA;;;AACA,QAAMC,YAAY,GAAG,MAAM9B,IAAI,CAAC+B,QAAL,CAAc,aAAd,CAA3B,CAZkD,CAalD;AAEA;;AACA,OAAK,MAAMC,EAAX,IAAiBF,YAAjB,EAA+B;AAC9BvB,IAAAA,OAAO,CAACC,GAAR,CAAYwB,EAAZ,EAD8B,CAE9B;AACA;AACA;AACA;;AAED,MACCR,QAAQ,CAAC,UAAD,CAAR,IACCA,QAAQ,CAAC,UAAD,CAAR,IAAwBE,mBAAmB,CAAC,YAAD,EAAe,SAAf,CAF7C,EAGE,CACD;AACD;;AAED,eAAeO,MAAf,GAAwB;AACvB,QAAM,CAACX,IAAD,EAAOC,KAAP,IAAgB,MAAM,0BAA5B;AACA,QAAM,CAAC3B,OAAD,EAAUI,IAAV,IAAkB,MAAML,cAAc,EAA5C;AAEA,QAAMK,IAAI,CAACkC,IAAL,CAAU,qDAAV,CAAN;AACA,QAAMzB,MAAM,CAACT,IAAD,CAAZ;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAMa,gBAAgB,CAACrB,IAAD,EAAOsB,IAAP,EAAaC,KAAb,CAAtB;AACA3B,EAAAA,OAAO,CAACuC,KAAR;AACA;;AAEDF,MAAM","sourcesContent":["#!/usr/bin/env node\n\nimport fsSync from 'fs'\nimport lowdb from 'lowdb'\nimport parseInput from './cli-options'\nimport path from 'path'\nimport puppeteer from 'puppeteer'\nconst fs = fsSync.promises\nrequire('dotenv').config()\n\nasync function setUpPuppeteer() {\n\tconst browser = await puppeteer.launch({ headless: false })\n\tconst page = await browser.newPage()\n\t// Show console logs from within page.evaluate\n\tpage.on('console', (msg) => {\n\t\tfor (let i = 0; i < msg.args().length; ++i)\n\t\t\tconsole.log(`${i}: ${msg.args()[i]}`)\n\t})\n\treturn [browser, page]\n}\n\nasync function signIn(page) {\n\tawait page.waitForSelector('input[name=\"username\"]')\n\tawait page.type('input[name=\"username\"]', process.env.USERNAME)\n\tawait page.type('input[name=\"password\"]', process.env.PASSWORD)\n\tawait Promise.all([\n\t\t// Wait for click that triggers navigation\n\t\tpage.waitForNavigation({ waitUntil: 'domcontentloaded' }),\n\t\tpage.click('input[name=\"login\"]'),\n\t])\n\tawait page.waitForSelector('.maintitle')\n}\n\nasync function getPostsForMonth(page, year, month) {\n\t// look at comments and author\n\t// it's a post if either of the following are true:\n\t// author=AlBrooks\n\t// author=BPAAdmin && Replies > 2 && title doesn't contain \"No Webinar\" or \"Holiday\"\n\tfunction authorIs(name) {}\n\tfunction titleDoesNotContain() {\n\t\tconst args = [].slice.call(arguments)\n\t\t// see if this works: Array.from(arguments)\n\t}\n\t// const name = await page.$('.row3 .name')\n\t// const nameText = await name.evaluate((node) => node.firstChild.innerText)\n\tconst nameElements = await page.evaluate('.row3 .name')\n\t// const authors = []\n\n\t// 2:\n\tfor (const el of nameElements) {\n\t\tconsole.log(el)\n\t\t// const example_parent = (await el.$x('..'))[0]\n\t\t// const innerHtml = await example_parent.evaluate((node) => node.innerHtml)\n\t\t// console.log(innerHtml)\n\t}\n\n\tif (\n\t\tauthorIs('AlBrooks') ||\n\t\t(authorIs('BPAAdmin') && titleDoesNotContain('No Webinar', 'Holiday'))\n\t) {\n\t}\n}\n\nasync function scrape() {\n\tconst [year, month] = await parseInput()\n\tconst [browser, page] = await setUpPuppeteer()\n\n\tawait page.goto('https://www.brookspriceaction.com/viewforum.php?f=1')\n\tawait signIn(page)\n\tconsole.log('sign in complete')\n\tawait getPostsForMonth(page, year, month)\n\tbrowser.close()\n}\n\nscrape()\n"],"file":"index.js"}
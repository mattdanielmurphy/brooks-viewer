{"version":3,"sources":["../src/index.js"],"names":["fs","fsSync","promises","require","config","setUpPuppeteer","browser","puppeteer","launch","headless","page","newPage","on","msg","i","args","length","console","log","signIn","waitForSelector","type","process","env","USERNAME","PASSWORD","Promise","all","waitForNavigation","waitUntil","click","getListOfPosts","evaluate","elements","document","querySelectorAll","results","el","author","firstChild","innerText","numReplies","parentNode","title","href","push","getAnalysisPostsForMonth","year","month","posts","filter","titleDoesNotContain","slice","call","arguments","every","string","toLowerCase","includes","processPosts","analysisPosts","post","postTitle","url","goto","analysisHTML","innerHTML","analysis","scrape"],"mappings":"AAAA;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,EAAE,GAAGC,YAAOC,QAAlB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,eAAeC,cAAf,GAAgC;AAC/B,QAAMC,OAAO,GAAG,MAAMC,mBAAUC,MAAV,CAAiB;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAjB,CAAtB;AACA,QAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACK,OAAR,EAAnB,CAF+B,CAG/B;;AACAD,EAAAA,IAAI,CAACE,EAAL,CAAQ,SAAR,EAAoBC,GAAD,IAAS;AAC3B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,IAAJ,GAAWC,MAA/B,EAAuC,EAAEF,CAAzC,EACCG,OAAO,CAACC,GAAR,CAAa,GAAEJ,CAAE,KAAID,GAAG,CAACE,IAAJ,GAAWD,CAAX,CAAc,EAAnC;AACD,GAHD;AAIA,SAAO,CAACR,OAAD,EAAUI,IAAV,CAAP;AACA;;AAED,eAAeS,MAAf,CAAsBT,IAAtB,EAA4B;AAC3B,QAAMA,IAAI,CAACU,eAAL,CAAqB,wBAArB,CAAN;AACA,QAAMV,IAAI,CAACW,IAAL,CAAU,wBAAV,EAAoCC,OAAO,CAACC,GAAR,CAAYC,QAAhD,CAAN;AACA,QAAMd,IAAI,CAACW,IAAL,CAAU,wBAAV,EAAoCC,OAAO,CAACC,GAAR,CAAYE,QAAhD,CAAN;AACA,QAAMC,OAAO,CAACC,GAAR,CAAY,CACjB;AACAjB,EAAAA,IAAI,CAACkB,iBAAL,CAAuB;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAvB,CAFiB,EAGjBnB,IAAI,CAACoB,KAAL,CAAW,qBAAX,CAHiB,CAAZ,CAAN;AAKA,QAAMpB,IAAI,CAACU,eAAL,CAAqB,YAArB,CAAN;AACA;;AAED,eAAeW,cAAf,CAA8BrB,IAA9B,EAAoC;AACnC,SAAO,MAAM,MAAMA,IAAI,CAACsB,QAAL,CAAc,MAAM;AACtC,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,CAAjB;AACA,UAAMC,OAAO,GAAG,EAAhB;;AACA,SAAK,MAAMC,EAAX,IAAiBJ,QAAjB,EAA2B;AAC1B,YAAMK,MAAM,GAAGD,EAAE,CAACE,UAAH,CAAcC,SAA7B;AACA,YAAMC,UAAU,GAAGJ,EAAE,CAACK,UAAH,CAAcA,UAAd,CAAyBP,gBAAzB,CAClB,gDADkB,EAEjB,CAFiB,EAEdK,SAFL;AAGA,YAAMG,KAAK,GACVN,EAAE,CAACK,UAAH,CAAcA,UAAd,CAAyBP,gBAAzB,CAA0C,cAA1C,EAA0D,CAA1D,EAA6DK,SAD9D;AAEA,YAAMI,IAAI,GACTP,EAAE,CAACK,UAAH,CAAcA,UAAd,CAAyBP,gBAAzB,CAA0C,cAA1C,EAA0D,CAA1D,EAA6DS,IAD9D;AAEAR,MAAAA,OAAO,CAACS,IAAR,CAAa,CAACF,KAAD,EAAQL,MAAR,EAAgBG,UAAhB,EAA4BG,IAA5B,CAAb;AACA;;AACD,WAAOR,OAAP;AACA,GAfkB,CAAnB;AAgBA;;AAED,eAAeU,wBAAf,CAAwCpC,IAAxC,EAA8CqC,IAA9C,EAAoDC,KAApD,EAA2D;AAC1D,QAAMC,KAAK,GAAG,MAAMlB,cAAc,CAACrB,IAAD,CAAlC;AACA,SAAO,MAAMuC,KAAK,CAACC,MAAN,CAAa,CAAC,CAACP,KAAD,EAAQL,MAAR,EAAgBG,UAAhB,CAAD,KAAiC;AAC1D,aAASU,mBAAT,GAA+B;AAC9B,YAAMpC,IAAI,GAAG,GAAGqC,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAb;AACA,aAAOvC,IAAI,CAACwC,KAAL,CACLC,MAAD,IAAY,CAACb,KAAK,CAACc,WAAN,GAAoBC,QAApB,CAA6BF,MAAM,CAACC,WAAP,EAA7B,CADP,CAAP;AAGA;;AAED,WACEN,mBAAmB,CAAC,YAAD,EAAe,SAAf,CAAnB,IAAgDb,MAAM,KAAK,UAA5D,IACCA,MAAM,KAAK,UAAX,IAAyBG,UAAU,GAAG,CAFxC;AAIA,GAZY,CAAb;AAaA;;AAED,eAAekB,YAAf,CAA4BjD,IAA5B,EAAkCkD,aAAlC,EAAiD;AAChD,OAAK,MAAMC,IAAX,IAAmBD,aAAnB,EAAkC;AACjC,UAAM,CAACE,SAAD,IAAgBC,GAAhB,IAAuBF,IAA7B;AACA,UAAMnD,IAAI,CAACsD,IAAL,CAAUD,GAAV,CAAN;AACA,UAAMrD,IAAI,CAACU,eAAL,CAAqB,WAArB,CAAN,CAHiC,CAIjC;AACA;;AACA,UAAM6C,YAAY,GAAG,MAAMvD,IAAI,CAACsB,QAAL,CAC1B,MAAME,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,CAAvC,EAA0C+B,SADtB,CAA3B;AAGA,UAAMC,QAAQ,GAAG,4BAAWF,YAAX,CAAjB;AACAhD,IAAAA,OAAO,CAACC,GAAR,CAAYiD,QAAZ;AACA;AACD;;AAED,eAAeC,MAAf,GAAwB;AACvB,QAAM,CAACrB,IAAD,EAAOC,KAAP,IAAgB,MAAM,0BAA5B;AACA,QAAM,CAAC1C,OAAD,EAAUI,IAAV,IAAkB,MAAML,cAAc,EAA5C;AAEA,QAAMK,IAAI,CAACsD,IAAL,CAAU,qDAAV,CAAN;AACA,QAAM7C,MAAM,CAACT,IAAD,CAAZ;AACA,QAAMkD,aAAa,GAAG,MAAMd,wBAAwB,CAACpC,IAAD,EAAOqC,IAAP,EAAaC,KAAb,CAApD;AACA,QAAMW,YAAY,CAACjD,IAAD,EAAOkD,aAAa,CAACR,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAP,CAAlB,CAPuB,CAQvB;AACA;;AAEDgB,MAAM","sourcesContent":["#!/usr/bin/env node\n\nimport fsSync from 'fs'\nimport { htmlToText } from 'html-to-text'\nimport lowdb from 'lowdb'\nimport parseInput from './cli-options'\nimport path from 'path'\nimport puppeteer from 'puppeteer'\n\nconst fs = fsSync.promises\nrequire('dotenv').config()\n\nasync function setUpPuppeteer() {\n\tconst browser = await puppeteer.launch({ headless: false })\n\tconst page = await browser.newPage()\n\t// Show console logs from within page.evaluate\n\tpage.on('console', (msg) => {\n\t\tfor (let i = 0; i < msg.args().length; ++i)\n\t\t\tconsole.log(`${i}: ${msg.args()[i]}`)\n\t})\n\treturn [browser, page]\n}\n\nasync function signIn(page) {\n\tawait page.waitForSelector('input[name=\"username\"]')\n\tawait page.type('input[name=\"username\"]', process.env.USERNAME)\n\tawait page.type('input[name=\"password\"]', process.env.PASSWORD)\n\tawait Promise.all([\n\t\t// Wait for click that triggers navigation\n\t\tpage.waitForNavigation({ waitUntil: 'domcontentloaded' }),\n\t\tpage.click('input[name=\"login\"]'),\n\t])\n\tawait page.waitForSelector('.maintitle')\n}\n\nasync function getListOfPosts(page) {\n\treturn await await page.evaluate(() => {\n\t\tconst elements = document.querySelectorAll('.row3 .name')\n\t\tconst results = []\n\t\tfor (const el of elements) {\n\t\t\tconst author = el.firstChild.innerText\n\t\t\tconst numReplies = el.parentNode.parentNode.querySelectorAll(\n\t\t\t\t'span.postdetails a[href^=\"postings_popup.php\"]',\n\t\t\t)[0].innerText\n\t\t\tconst title =\n\t\t\t\tel.parentNode.parentNode.querySelectorAll('a.topictitle')[0].innerText\n\t\t\tconst href =\n\t\t\t\tel.parentNode.parentNode.querySelectorAll('a.topictitle')[0].href\n\t\t\tresults.push([title, author, numReplies, href])\n\t\t}\n\t\treturn results\n\t})\n}\n\nasync function getAnalysisPostsForMonth(page, year, month) {\n\tconst posts = await getListOfPosts(page)\n\treturn await posts.filter(([title, author, numReplies]) => {\n\t\tfunction titleDoesNotContain() {\n\t\t\tconst args = [].slice.call(arguments)\n\t\t\treturn args.every(\n\t\t\t\t(string) => !title.toLowerCase().includes(string.toLowerCase()),\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t(titleDoesNotContain('no webinar', 'holiday') && author === 'AlBrooks') ||\n\t\t\t(author === 'BPAAdmin' && numReplies > 0)\n\t\t)\n\t})\n}\n\nasync function processPosts(page, analysisPosts) {\n\tfor (const post of analysisPosts) {\n\t\tconst [postTitle, , , url] = post\n\t\tawait page.goto(url)\n\t\tawait page.waitForSelector('div.quote')\n\t\t// first quote:\n\t\t//   each bar is after a <br>\n\t\tconst analysisHTML = await page.evaluate(\n\t\t\t() => document.querySelectorAll('div.quote')[0].innerHTML,\n\t\t)\n\t\tconst analysis = htmlToText(analysisHTML)\n\t\tconsole.log(analysis)\n\t}\n}\n\nasync function scrape() {\n\tconst [year, month] = await parseInput()\n\tconst [browser, page] = await setUpPuppeteer()\n\n\tawait page.goto('https://www.brookspriceaction.com/viewforum.php?f=1')\n\tawait signIn(page)\n\tconst analysisPosts = await getAnalysisPostsForMonth(page, year, month)\n\tawait processPosts(page, analysisPosts.slice(0, 1))\n\t// browser.close()\n}\n\nscrape()\n"],"file":"index.js"}